using CourseManagementAPI.AutoGeneratedModel;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace CourseManagementAPI.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class InstructorController : ControllerBase
    {
        private readonly AzureContext _context;
        private readonly ILogger<InstructorController> _logger;

        public InstructorController(AzureContext context, ILogger<InstructorController> logger)
        {
            _context = context;
            _logger = logger;
        }

        [HttpGet]
        public async Task<IEnumerable<Instructor>> GetAllAsync()
        {
            var instructors = await _context.Instructors
                .Include(i => i.CourseAssignments)
                .ThenInclude(c => c.Course)
                .ToListAsync().ConfigureAwait(false);

            if(instructors == null || instructors.Count == 0)
            {
                _logger.LogError("No data available for instructors");
            }

            return instructors;
        }


        [HttpPut]
        public async Task PutAsync(Instructor instructor)
        {
            _context.Update(instructor);
            await _context.SaveChangesAsync();
        }
    }
}
